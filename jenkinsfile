pipeline {
    agent any // run on any available Jenkins agent

    // NOTE: Configure a Docker Tool in Jenkins (Manage Jenkins -> Global Tool Configuration)
    // Give it a name (e.g. 'docker-20.10.12') and ensure agents can access the docker binary.
    // Then set DOCKER_TOOL_NAME to that name below or in Jenkins job configuration.
    environment {
        IMAGE_NAME = "jenkins-ci-lab"
        IMAGE_TAG = "latest"
        DOCKER_TOOL_NAME = "docker" // change this to the name you configured in Jenkins
    }

    stages {
        stage('Build') {
            steps {
                echo "ðŸ”§ Building Docker image using Docker Tool..."
                }
            }
        }

        stage('Test') {
            steps {
                echo "ðŸ§ª Running tests inside Docker image..."
                withDockerTool(toolName: env.DOCKER_TOOL_NAME) {
                    // Call 'docker' directly to run the container for testing
                    sh "docker run --rm ${IMAGE_NAME}:${IMAGE_TAG} npm test"
                }
            }
        }

        stage('Deploy') {
            steps {
                echo "ðŸš€ Deploying (mock)..."
                // For a real deploy, you might use 'withDockerRegistry' here to push the image.
            }
        }
    }

    post {
        always {
            echo "ðŸ“‹ Pipeline completed at: ${new Date()}"
        }
    }
}
